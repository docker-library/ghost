sudo: required
language: bash
services:
  - docker

# TODO - Hook the VAR from ./build-config.sh
env:
  global:
    - GHOST_VERSION="1.22.4C"

before_install:
  - docker --version
  - sudo apt-get -qq update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - sudo apt-get install -y openssl parallel

addons:
  apt:
    packages:
      - docker-ce

install:
    - git clone https://github.com/docker-library/official-images.git ~/official-images

before_script:
  - CONTAINER_NAME="ghostuat"
  - DOCKER_USERNAME="devmtl"
  - DOCKER_REPO_NAME="ghostfire"
  - DOCKER_REPO_PREFIX="ghostfire"
  - THIS_DATE=$(date -u +"%Y-%m-%d_%H-%M-%S")
  - THIS_SHA_LONG=$(git log -1 | head -1 | awk '{print $2}')
  - THIS_SHA_SHORT=$(git rev-parse --short HEAD)
  - IMAGE_VERSION="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$GHOST_VERSION"
  - IMAGE_DATE="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$THIS_DATE"
  - IMAGE_EDGE="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":edge
  - IMAGE_SHA_LONG="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$THIS_SHA_LONG"
  - IMAGE_SHA_SHORT="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$GHOST_VERSION"-"$THIS_SHA_SHORT"

  - if [ -n "$TRAVIS_TAG" ]; then
    image="$image:$TRAVIS_TAG";
    fi

script:
  - docker build -t "$IMAGE_SHA_LONG" .
  - docker run -d --name "$CONTAINER_NAME" -p 2368:2368 -e url=http://localhost:2368 -e NODE_ENV=production "$IMAGE_SHA_LONG"
  - echo "Ensure $CONTAINER_NAME is starting..."
  - until $(curl --output /dev/null --silent --head --fail http://localhost:2368); do
      echo "Waiting for $CONTAINER_NAME container to run...";
      sleep 3;
    done
  - curl http://localhost:2368 | grep "The professional publishing platform"
  - echo "Starting official docker unit test on the image..."
  - ~/official-images/test/run.sh "$IMAGE_SHA_LONG"
  - uname -a;

after_script:
  - docker inspect "$CONTAINER_NAME";
  - docker images;
  - docker logs "$CONTAINER_NAME";
  - echo "Starting unit tests..."
  - docker exec -it "$CONTAINER_NAME" uname -a;
  - docker exec -it "$CONTAINER_NAME" node --version;
  - docker exec -it "$CONTAINER_NAME" cat /var/lib/ghost/current/content/themes/casper/package.json | grep version;
  - docker exec -it "$CONTAINER_NAME" cat /var/lib/ghost/current/package.json | grep version;
  - docker exec -it "$CONTAINER_NAME" curl -Is --head "http://localhost:2368" | grep -F -o "HTTP/1.1 200 OK" || echo "Error --> http://localhost:2368"
  - docker rm -f "$CONTAINER_NAME";
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin;
  - docker push "IMAGE_SHA_LONG";
  - docker build -t "$IMAGE_VERSION" .;
  - docker push "$IMAGE_VERSION";
  - docker build -t "$IMAGE_DATE" .;
  - docker push "$IMAGE_DATE";
  - docker build -t "$IMAGE_SHA_SHORT" .;
  - docker push "$IMAGE_SHA_SHORT";
  - docker build -t "$IMAGE_EDGE" .;
  - docker push "$IMAGE_EDGE";
  - echo && echo "IMAGE_EDGE=$IMAGE_EDGE" && echo "IMAGE_SHA_SHORT=$IMAGE_SHA_SHORT" && echo "IMAGE_VERSION=$IMAGE_VERSION" && echo "IMAGE_SHA_LONG=$IMAGE_SHA_LONG" && echo "IMAGE_DATE=$IMAGE_DATE" && echo "#IMAGE_EDGE=$IMAGE_EDGE" && echo "#IMAGE_SHA_SHORT=$IMAGE_SHA_SHORT" && echo "#IMAGE_VERSION=$IMAGE_VERSION" && echo "#IMAGE_SHA_LONG=$IMAGE_SHA_LONG" && echo "#IMAGE_DATE=$IMAGE_DATE"

after_success:
      #docker build -t "$IMAGE_SHA_LONG" (already built)
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ] && [ "$TRAVIS_BRANCH" == "master" ] && [ "$DOCKER_REPO_PREFIX" != "" ] && [ "$DOCKER_REPO_NAME" != "" ] && [ "$DOCKER_USERNAME" != "" ] && [ "$DOCKER_PASSWORD" != "" ]; then
      echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin;
      echo "All done!"
    fi

  # See https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings
  # Secret VARS managed by Travis:
    # - DOCKER_PASSWORD=[secure]