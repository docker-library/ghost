sudo: required
language: bash

services:
  - docker

# TODO - Hook the VAR from ./build-config.sh
env:
  global:
    - GHOST_VERSION="1.22.4B"

before_install:
  - docker --version
  - sudo apt-get -qq update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - sudo apt-get install -y openssl parallel

addons:
  apt:
    packages:
      - docker-ce

install:
    - git clone https://github.com/docker-library/official-images.git ~/official-images

before_script:
  - CONTAINER_NAME="ghostuat"
  - THIS_DATE=$(date -u +"%Y-%m-%d_%H-%M-%S")
  - THIS_SHA=$(git log -1 | head -1 | awk '{print $2}')
  - IMAGE_VERSION="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$GHOST_VERSION"
  - IMAGE_DATE="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$THIS_DATE"
  - IMAGE_SHA="$DOCKER_USERNAME"/"$DOCKER_REPO_NAME":"$THIS_SHA"
  - if [ -n "$TRAVIS_TAG" ]; then
    image="$image:$TRAVIS_TAG";
    fi

script:
    # Make sure that there is a useable ip address as "advertise address" because else the swarm creation fails maybe
    # docker swarm init --advertise-addr `ip addr s | grep global | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' | head -n1`
  # Building with 3 TAGS
  - docker build -t "$IMAGE_SHA" .
  - docker run -d --name "$CONTAINER_NAME" -p 2368:2368 -e url=http://localhost:2368 -e NODE_ENV=production "$IMAGE_VERSION"
  - echo "Ensure $CONTAINER_NAME is starting..."
  - until $(curl --output /dev/null --silent --head --fail http://localhost:2368); do
      echo "Waiting for $CONTAINER_NAME container to run...";
      sleep 3;
    done
  - curl http://localhost:2368 | grep "The professional publishing platform"
  - echo "Time to run official docker test on the container..."
  - ~/official-images/test/run.sh "$IMAGE_VERSION"
  - uname -a;

after_script:
  - docker inspect "$IMAGE_VERSION";
  - docker images;
  - docker logs "$CONTAINER_NAME";
  - docker rm -f "$CONTAINER_NAME";

after_success:
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ] && [ "$TRAVIS_BRANCH" == "master" ] && [ "$DOCKER_REPO_PREFIX" != "" ] && [ "$DOCKER_REPO_NAME" != "" ] && [ "$DOCKER_USERNAME" != "" ] && [ "$DOCKER_PASSWORD" != "" ]; then
      echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin;
      docker push "$IMAGE_SHA";
      docker build -t "$IMAGE_VERSION" .;
      docker push "$IMAGE_VERSION";
      docker build -t "$IMAGE_DATE" .;
      docker push "$IMAGE_DATE";
    fi

  # See https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings

  # VAR managed by Travis:
    # DOCKER_USERNAME=[secure]
    # DOCKER_PASSWORD=[secure]
    # DOCKER_REPO_PREFIX=[secure]
    # DOCKER_REPO_NAME=[secure]